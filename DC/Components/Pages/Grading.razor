@page "/grading"

@inject AppDbContext appDbContext
@inject IDialogService dialogService
@inject ISnackbar sb
@inject IServiceProvider serviceProvider

@rendermode InteractiveServer

<PageTitle>Grading</PageTitle>

<AuthorizeView>
  <NotAuthorized>
    <MudText Typo="Typo.h6">You are not authorized to view this page.</MudText>
  </NotAuthorized>
  <Authorized>
    @if (isLoading)
    {
      <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
    }
    else
    {
      <MudTabs Elevation="0" ApplyEffectsToContainer="true" PanelClass="pa-6" ActivePanelIndex="activeIndex" ActivePanelIndexChanged="HandleTabChanged">
        <MudTabPanel Text="Choose Survey" Icon="@Icons.Material.Filled.ListAlt">
          <MudDataGrid T="SurveyModel" Items="@surveys" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@_surveyQuickFilter" Elevation="0">
            <ToolBarContent>
              <MudText Typo="Typo.h6">Surveys</MudText>
              <MudSpacer />
              <MudTextField Value="@_searchString" ValueChanged="@((string val) => OnSurveySearchInput(val))" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" DebounceInterval="300" Clearable="true">
              </MudTextField>
            </ToolBarContent>
            <Columns>
              <PropertyColumn T="SurveyModel" TProperty="int" Property="x => x.Id" Title="ID" />
              <PropertyColumn T="SurveyModel" TProperty="string" Property="x => x.Title" Title="Title" />
              <PropertyColumn T="SurveyModel" TProperty="DateTime" Property="x => x.StartDate" Title="Start Date" Format="dd/MM/yyyy" />
              <PropertyColumn T="SurveyModel" TProperty="DateTime" Property="x => x.EndDate" Title="End Date" Format="dd/MM/yyyy" />
              <PropertyColumn T="SurveyModel" TProperty="DateTime" Property="x => x.CreatedDate" Title="Created Date" Format="dd/MM/yyyy HH:mm" />
              <PropertyColumn T="SurveyModel" TProperty="bool" Property="x => x.IsActive" Title="Status">
                <CellTemplate Context="cellContext">
                  @if (cellContext.Item.IsActive)
                  {
                    <MudChip Color="Color.Success" Size="Size.Small">On going</MudChip>
                  }
                  else
                  {
                    <MudChip Size="Size.Small">Ended</MudChip>
                  }
                </CellTemplate>
              </PropertyColumn>
              <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate Context="cellContext">
                  <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="@(() => OnSelectSurvey(cellContext.Item))">
                    Choose
                  </MudButton>
                </CellTemplate>
              </TemplateColumn>
            </Columns>
            <PagerContent>
              <MudDataGridPager T="SurveyModel" />
            </PagerContent>
          </MudDataGrid>
        </MudTabPanel>
        <MudTabPanel Text="Staff by Department" Icon="@Icons.Material.Filled.People">
          @if (selectedSurvey != null)
          {
            <MudText Typo="Typo.h6" Class="mb-4">Selected Survey: @selectedSurvey.Title</MudText>
          }
          @foreach (var department in staffByDepartment.Keys)
          {
            <MudExpansionPanel Text="@department">
              <MudList T="@StaffModel">
                @foreach (var staff in staffByDepartment[department])
                {
                  <MudListItem T="@StaffModel">
                    <MudText>@staff.FullName</MudText>
                  </MudListItem>
                }
              </MudList>
            </MudExpansionPanel>
          }
        </MudTabPanel>
      </MudTabs>
    }
  </Authorized>
</AuthorizeView>