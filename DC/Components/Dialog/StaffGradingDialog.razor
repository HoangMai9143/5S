@using Microsoft.EntityFrameworkCore
@inject AppDbContext appDbContext

<MudDialog>
  <DialogContent>
    <MudText Typo="Typo.h5" Class="mb-4">Grading @Staff.FullName for @Survey.Title</MudText>
    @if (isLoading)
    {
      <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
    else
    {
      @foreach (var question in surveyQuestions)
      {
        <MudCard Elevation="3" Class="mb-4">
          <MudCardContent>
            <MudText Typo="Typo.h6">@question.Question.QuestionContext</MudText>
            <MudRadioGroup T="int" @bind-SelectedOption="@selectedAnswers[question.QuestionId]">
              @foreach (var answer in question.Question.Answers)
              {
                <MudRadio T="int" Option="@answer.Id" Color="Color.Primary">@answer.AnswerText</MudRadio>
              }
            </MudRadioGroup>
          </MudCardContent>
        </MudCard>
      }
    }
  </DialogContent>
  <DialogActions>
    <MudButton OnClick="Cancel">Cancel</MudButton>
    <MudButton Color="Color.Primary" OnClick="Submit">Submit</MudButton>
  </DialogActions>
</MudDialog>

@code {
  [CascadingParameter] MudDialogInstance MudDialog { get; set; }
  [Parameter] public StaffModel Staff { get; set; }
  [Parameter] public SurveyModel Survey { get; set; }

  private bool isLoading = true;
  private List<SurveyQuestionModel> surveyQuestions = new List<SurveyQuestionModel>();
  private Dictionary<int, int> selectedAnswers = new Dictionary<int, int>();

  protected override async Task OnInitializedAsync()
  {
    await LoadSurveyQuestions();
    isLoading = false;
  }

  private async Task LoadSurveyQuestions()
  {
    surveyQuestions = await appDbContext.SurveyQuestionModel
    .Include(sq => sq.Question)
    .ThenInclude(q => q.Answers)
    .Where(sq => sq.SurveyId == Survey.Id)
    .ToListAsync();

    foreach (var question in surveyQuestions)
    {
      selectedAnswers[question.QuestionId] = 0;
    }
  }

  private void Cancel()
  {
    MudDialog.Cancel();
  }

  private void Submit()
  {
    var gradingResult = surveyQuestions.Select(sq => new QuestionAnswerModel
      {
        SurveyId = Survey.Id,
        QuestionId = sq.QuestionId,
        StaffId = Staff.Id,
        AnswerId = selectedAnswers[sq.QuestionId]
      }).ToList();

    MudDialog.Close(DialogResult.Ok(gradingResult));
  }
}