@page "/grading"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject AppDbContext appDbContext
@inject IDialogService dialogService
@inject ISnackbar sb
@inject IServiceProvider serviceProvider

@rendermode InteractiveServer

<PageTitle>Grading</PageTitle>

<AuthorizeView>
	<NotAuthorized>
		<MudText Typo="Typo.h6">You are not authorized to view this page.</MudText>
	</NotAuthorized>
	<Authorized>
		@if (isLoading)
		{
			<MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
		}
		else
		{
			<MudTabs Elevation="0" ApplyEffectsToContainer="true" PanelClass="pa-6" ActivePanelIndex="activeIndex" ActivePanelIndexChanged="HandleTabChanged">
				<MudTabPanel Text="Choose Survey" Icon="@Icons.Material.Filled.ListAlt">
					<MudDataGrid T="SurveyModel" Items="@surveys" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@_surveyQuickFilter" Elevation="0">
						<ToolBarContent>
							<MudTextField Value="@_searchString" ValueChanged="@((string val) => OnSurveySearchInput(val))" 
              Placeholder="Search" Adornment="Adornment.Start" 
              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" 
              Class="mt-0" DebounceInterval="300" Clearable="true">
							</MudTextField>
						</ToolBarContent>
						<Columns>
							<PropertyColumn T="SurveyModel" TProperty="int" Property="x => x.Id" Title="ID" />
							<PropertyColumn T="SurveyModel" TProperty="string" Property="x => x.Title" Title="Title" />
							<PropertyColumn T="SurveyModel" TProperty="DateTime" Property="x => x.StartDate" Title="Start Date" Format="dd/MM/yyyy" />
							<PropertyColumn T="SurveyModel" TProperty="DateTime" Property="x => x.EndDate" Title="End Date" Format="dd/MM/yyyy" />
							<PropertyColumn T="SurveyModel" TProperty="DateTime" Property="x => x.CreatedDate" Title="Created Date" Format="dd/MM/yyyy HH:mm" />
							<PropertyColumn T="SurveyModel" TProperty="bool" Property="x => x.IsActive" Title="Status">
								<CellTemplate Context="surveyContext">
									@if (surveyContext.Item.IsActive)
									{
										<MudChip Color="Color.Success" Size="Size.Small">On going</MudChip>
									}
									else
									{
										<MudChip Size="Size.Small">Ended</MudChip>
									}
								</CellTemplate>
							</PropertyColumn>
							<TemplateColumn CellClass="justify-end">
								<CellTemplate Context="surveyContext">
									<MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="@(() => OnSelectSurvey(surveyContext.Item))">
										Choose
									</MudButton>
								</CellTemplate>
							</TemplateColumn>
						</Columns>
						<PagerContent>
							<MudDataGridPager T="SurveyModel" />
						</PagerContent>
					</MudDataGrid>
				</MudTabPanel>
				<MudTabPanel Text="Staff" Icon="@Icons.Material.Filled.People">
					@if (selectedSurvey != null)
					{
						<MudText Typo="Typo.h6" Class="mb-4">Current Survey: @selectedSurvey.Title</MudText>
					}
					<MudDataGrid T="StaffModel" Items="@allStaff" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@_staffQuickFilter">
						<ToolBarContent>
							<MudTextField Value="@_staffSearchString" ValueChanged="@((string val) => OnStaffSearchInput(val))" 
              Placeholder="Search" Adornment="Adornment.Start" 
              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" 
              Class="mt-0" DebounceInterval="300" Clearable="true">
							</MudTextField>
						</ToolBarContent>
						<Columns>
							<PropertyColumn Property="x => x.FullName" Title="Full Name" />
							<PropertyColumn Property="x => x.Department" Title="Department" />
							<TemplateColumn Title="Score" CellClass="pa-0">
								<CellTemplate Context="staffContext">
									<MudPaper Elevation="0" Class="d-flex flex-column justify-center align-center pa-2" Style="height: 100%;">
										@if (staffScores.TryGetValue(staffContext.Item.Id, out var score))
										{
											<MudProgressLinear Size="Size.Medium" Rounded="true" Value="@score" Min="0" Max="100" Color="Color.Primary" Class="my-2 w-100" />
											<MudText>@score.ToString("F0")</MudText>
										}
										else
										{
											<MudText Color="Color.Warning">Not graded yet</MudText>
										}
									</MudPaper>
								</CellTemplate>
							</TemplateColumn>
							<TemplateColumn Title="Note" CellClass="pa-0">
								<CellTemplate Context="staffContext">
									<div class="d-flex align-center">
										<MudTextField T="string" Value="@(GetStaffNote(staffContext.Item.Id))" ValueChanged="@((string newNote) => UpdateStaffNote(staffContext.Item.Id, newNote))" Placeholder="Add note" Variant="Variant.Outlined" Margin="Margin.Dense" Class="flex-grow-1 ma-2" />
										<MudIconButton Icon="@Icons.Material.Filled.Save" Color="Color.Primary" Size="Size.Small" OnClick="@(() => SubmitStaffNote(staffContext.Item.Id))" Class="ml-2" />
									</div>
								</CellTemplate>
							</TemplateColumn>
							<TemplateColumn CellClass="pa-0">
								<CellTemplate Context="staffContext">
									<MudPaper Elevation="0" Class="d-flex justify-center align-center" Style="height: 100%;">
										<MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="@(() => OpenStaffGradingDialog(staffContext.Item))">
											Grade
										</MudButton>
									</MudPaper>
								</CellTemplate>
							</TemplateColumn>
						</Columns>
						<PagerContent>
							<MudDataGridPager T="StaffModel" />
						</PagerContent>
					</MudDataGrid>
				</MudTabPanel>
			</MudTabs>
		}
	</Authorized>
</AuthorizeView>