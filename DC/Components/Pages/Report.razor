@page "/report"
@using DC.Models
@using MudBlazor
@inject AppDbContext appDbContext
@inject IDialogService dialogService
@inject ISnackbar sb
@inject IJSRuntime js

@rendermode InteractiveServer

<PageTitle>Report</PageTitle>

<AuthorizeView Roles="Admin">
  <Authorized>
    @if (isLoading)
    {
      <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
    }
    else
    {
      <MudGrid>
        <MudItem xs="12" sm="4">
          <MudAutocomplete T="SurveyModel" Label="Select Survey" @bind-Value="selectedSurvey" SearchFunc="@SearchSurveys" ToStringFunc="@(s => s?.Title ?? string.Empty)" AnchorOrigin="Origin.BottomCenter" ResetValueOnEmptyText="true" CoerceText="true" AdornmentColor="Color.Primary" Clearable="true">
          </MudAutocomplete>

          <MudAutocomplete T="string" Label="Select Department" @bind-Value="selectedDepartment" SearchFunc="@SearchDepartments" AnchorOrigin="Origin.BottomCenter" ResetValueOnEmptyText="true" CoerceText="true" AdornmentColor="Color.Primary" Clearable="true">
          </MudAutocomplete>
        </MudItem>
        <MudItem xs="12" sm="4">
          <MudCard>
            <MudCardContent>
              <MudText Typo="Typo.h6">Average Score</MudText>
              <MudText Typo="Typo.h4">@averageScore.ToString("F2")/100</MudText>
            </MudCardContent>
          </MudCard>
        </MudItem>
        @if (selectedSurvey != null && selectedSurvey.Title != ALL_SURVEYS)
        {
          <MudItem xs="12" sm="4">
            <MudCard>
              <MudCardContent>
                <MudText Typo="Typo.h6">Graded Staff</MudText>
                <MudText Typo="Typo.h4">@gradedStaff / @filteredStaff.Count()</MudText>
              </MudCardContent>
            </MudCard>
          </MudItem>
        }
        <MudItem xs="12">
          <MudCard>
            <MudCardContent>
              @if (selectedSurvey != null)
              {
                <MudText Typo="Typo.h6">Score distribution of @selectedSurvey.Title.ToLower()</MudText>
              }
              else
              {
                <MudText Typo="Typo.h6">Score distribution of all surveys</MudText>
              }
              <MudChart ChartType="ChartType.Bar" ChartSeries="@series" XAxisLabels="@xAxisLabels" Width="100%" Height="350px" ChartOptions="new ChartOptions { YAxisTicks = 1 }"></MudChart>
            </MudCardContent>
          </MudCard>
        </MudItem>
        @if (selectedSurvey != null && selectedSurvey.Title != ALL_SURVEYS && topScoringStaff.Any())
        {
          <MudItem xs="12" sm="6">
            <MudCard>
              <MudCardContent>
                <MudText Typo="Typo.h6">
                  @(topScoringStaff.Count == 1 ? "Highest Score: " : "Highest Scores: ")
                  @staffScores[topScoringStaff[0].Id].ToString("F0")/100
                </MudText>
                @foreach (var staff in topScoringStaff)
                {
                  <MudText Typo="Typo.h5">@staff.FullName - @staff.Department</MudText>
                }
              </MudCardContent>
            </MudCard>
          </MudItem>
        }
        @if (selectedSurvey != null && selectedSurvey.Title != ALL_SURVEYS && lowestScoringStaff.Any())
        {
          <MudItem xs="12" sm="6">
            <MudCard>
              <MudCardContent>
                <MudText Typo="Typo.h6">
                  @(lowestScoringStaff.Count == 1 ? "Lowest Score: " : "Lowest Scores: ")
                  @staffScores[lowestScoringStaff[0].Id].ToString("F0")/100
                </MudText>
                @foreach (var staff in lowestScoringStaff)
                {
                  <MudText Typo="Typo.h5">@staff.FullName - @staff.Department</MudText>
                }
              </MudCardContent>
            </MudCard>
          </MudItem>
        }
        @if (selectedSurvey != null && selectedSurvey.Title != ALL_SURVEYS)
        {
          <MudItem xs="12">
            <MudDataGrid T="StaffModel" Items="@filteredStaff" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@_staffQuickFilter">
              <ToolBarContent>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.FileDownload" OnClick="@ExportToExcel" Class="mr-2">
                  Export to Excel
                </MudButton>
                <MudTextField @bind-Value="_staffSearchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" DebounceInterval="300" />
              </ToolBarContent>
              <Columns>
                <PropertyColumn Property="x => x.FullName" Title="Full Name" />
                <PropertyColumn Property="x => x.Department" Title="Department" />
                <TemplateColumn Title="Score" CellClass="auto" Width="150px">
                  <CellTemplate Context="staffContext">
                    <div Elevation="0" Class="d-flex flex-column justify-center align-center pa-2" Style="height: 100%;width:80%;">
                      @if (staffScores.TryGetValue(staffContext.Item.Id, out var score))
                      {
                        <MudProgressLinear Size="Size.Medium" Rounded="true" Value="@score" Min="0" Max="100" Color="Color.Primary" Class="my-2 w-100" Style="min-width: 150px;" />
                        <MudText Width="150px">@score.ToString("F0")</MudText>
                      }
                      else
                      {
                        <MudText Width="150px" Color="Color.Warning">Not graded yet</MudText>
                      }
                    </div>
                  </CellTemplate>
                </TemplateColumn>
                <TemplateColumn>
                  <CellTemplate Context="staffContext">
                    <div class="center-button">
                      <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="@(() => OpenStaffGradingDialog(staffContext.Item))">
                        View Details
                      </MudButton>
                    </div>
                  </CellTemplate>
                </TemplateColumn>
              </Columns>
              <PagerContent>
                <MudDataGridPager T="StaffModel" />
              </PagerContent>
            </MudDataGrid>
          </MudItem>
        }
        else
        {
          <MudItem xs="12" class="text-center">
            <MudText Typo="Typo.h6">Please select a survey to view staff details.</MudText>
          </MudItem>
        }
      </MudGrid>
    }
  </Authorized>
</AuthorizeView>

<style>
  .mud-chart-bar {
    stroke-width: 20px;
  }

  .center-button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
  }
</style>