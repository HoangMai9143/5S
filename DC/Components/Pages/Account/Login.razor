@page "/login"
@using DC.ViewModels
@inject AppDbContext appDbContext
@inject NavigationManager navigationManager

<PageTitle>Login</PageTitle>

<AuthorizeView>
  <NotAuthorized>
    <div class="row">
      <div class="col-lg-4 offset-lg-4 pt4 pb4">
        <EditForm Model="@Model" OnValidSubmit="Authenticate" FormName="LoginForm" Context="formContext">
          <DataAnnotationsValidator />
          <div class="text-center flex-column">
            <h1>LOGIN</h1>
          </div>
          <div class="mb-3">
            <label>Username</label>
            <InputText @bind-Value="Model.userName" class="form-control" placeholder="username" />
            <ValidationMessage For="@(() => Model.userName)" />
          </div>
          <div class="mb-3">
            <label>Password</label>
            <InputText @bind-Value="Model.password" type="password" class="form-control" placeholder="password" />
            <ValidationMessage For="@(() => Model.password)" />
          </div>
          <div class="mb-3 text-center">
            <span class="text-danger">@errorMessage</span>
          </div>
          <div class="mb-3 d-grid gap-2">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Login</MudButton>
          </div>
        </EditForm>
      </div>
    </div>
  </NotAuthorized>
  <Authorized>
    <MudText> How did you get here? You can <MudLink Href="/logout" Color="Color.Primary" Underline="Underline.Hover">Logout here</MudLink> if you need.
    </MudText>
  </Authorized>
</AuthorizeView>